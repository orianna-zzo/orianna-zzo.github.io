<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目结构 on 博客|ZHENG Zi&#39;ou</title>
    <link>https://orianna-zzo.github.io/tags/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 项目结构 on 博客|ZHENG Zi&#39;ou</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cmn-Hans</language>
    <lastBuildDate>Sat, 11 Aug 2018 19:00:35 +0800</lastBuildDate>
    
	<atom:link href="https://orianna-zzo.github.io/tags/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog养成记(9) 项目结构&amp;前端环境配置</title>
      <link>https://orianna-zzo.github.io/blog/2018-08/blog%E5%85%BB%E6%88%90%E8%AE%B09-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 11 Aug 2018 19:00:35 +0800</pubDate>
      
      <guid>https://orianna-zzo.github.io/blog/2018-08/blog%E5%85%BB%E6%88%90%E8%AE%B09-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>其实如果只是对静态页面进行修改，不需要配什么环境，只需要对html进行修改就好。
哦，不对，因为还是会使用hugo来生成静态页面，hugo还是要配置的，配置的方法详见这个系列的第2篇Hugo+Docker在Github上建立Blog。所以重点就在如何自己生成自己喜欢的hugo模板了。
由于仅使用hugo静态页面，所以也不计划使用gulp之类的工具，可能出了hugo外唯一考虑要使用的是sass。这是因为css的结构化有些糟，而sass作为css的预编译器，有更好的结构性，更像一门编程语言，修改起来会更得心应手，(我猜😶)不会有改了A不知道会不会影响B的囧状。sass具体的配置详见前端试水系列第2篇使用docker镜像的sass配置。
项目结构 参考Hugo的其他theme和官网对各个文件夹的介绍，对新建主题的文件结构如下：
MyNewTheme ├── archetypes/ ├── exampleSite/ ├── i18n/ ├── layouts/ ⎮	├── _default/ ⎮	├── partials/ ⎮	├── page ⎮	├── post ⎮	├── shortcodes/ ⎮	├── 404.html ⎮	├── index.html ⎮	└── robots.txt ├── static/ ⎮	├── css/ ⎮	├── js/ ⎮	├── scss/ ⎮	├── font/ ⎮	└── img/ └── theme.toml  其中archetypes定义了如果使用hugo new，默认生成的md的文件头；exampleSite提供一个网站实例；i18n提供多语言的翻译；layouts提供主题的布局；static存放静态文件；theme.toml提供主题的信息。
Hugo官网对于每个模板都会有简单的介绍，可以借鉴一下。
其中scss主要参考Sass目录层次，建立以下scss的项目结构：
scss ├── abstracts/ ├── base/ ├── components/ ├── layout/ ├── pages/ ├── vendors/ ⎮	└── bootstrap4/ └── main.</description>
    </item>
    
  </channel>
</rss>